name: Django CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    env:
      BASE_IMAGE: arm64v8

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Check architecture
      run: echo ${{ runner.architecture }}

    - name: Create .env file from template
      run: |
        cp .env.template .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "DJANGO_KEY=${{ secrets.DJANGO_KEY }}" >> .env
        echo "CLIENT_ID_YA=${{ secrets.CLIENT_ID_YA }}" >> .env
        echo "SECRET_KEY_YA=${{ secrets.SECRET_KEY_YA }}" >> .env
        echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> .env
        echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
        echo "TELEGRAM_BOT_WEBHOOK=${{ secrets.TELEGRAM_BOT_WEBHOOK }}" >> .env
        echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}" >> .env
        echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" >> .env
        echo "DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}" >> .env
        echo "DEBUG=${{ secrets.DEBUG }}" >> .env

    - name: Build and push Docker Hub
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker build --build-arg BASE_IMAGE=arm64v8 -t my_super_api:arm64v8 .
        docker tag my_super_api:arm64v8 ${{ secrets.DOCKER_USERNAME }}/my_super_api:arm64v8
        docker push ${{ secrets.DOCKER_USERNAME }}/my_super_api:arm64v8

    - name: Run Server
      run: docker-compose up -d --build
